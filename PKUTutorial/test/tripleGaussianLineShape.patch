Index: src/GaussianLineShape.cc
===================================================================
RCS file: /cvs_server/repositories/CMSSW/CMSSW/PhysicsTools/TagAndProbe/src/GaussianLineShape.cc,v
retrieving revision 1.3
diff -u -r1.3 GaussianLineShape.cc
--- src/GaussianLineShape.cc	4 Aug 2009 21:54:51 -0000	1.3
+++ src/GaussianLineShape.cc	5 Jan 2010 22:05:42 -0000
@@ -5,22 +5,37 @@
 #include <RooRealVar.h>
 #include <RooGaussian.h>
 #include <RooAddPdf.h>
+#include "RooDataSet.h"
+#include "RooPlot.h"
+#include "RooMCStudy.h"
+#include "RooFitResult.h"
 
 GaussianLineShape::GaussianLineShape():
-  rooGaussMean_(0),
+  rooGaussMean1S_(0),
   rooGaussSigma_(0),
-  rooGaussDummyFrac_(0),
-  rooGaussPdf_(0),
+
+  rooGaussDummyFrac2S_(0),
+  rooGaussDummyFrac3S_(0),
+  rooGaussPdf1S_(0),
+  rooGaussPdf2S_(0),
+  rooGaussPdf3S_(0),
+
   GaussPDF_(0){}
 
-GaussianLineShape::GaussianLineShape(const edm::ParameterSet& GaussianPSet, 
-				     RooRealVar *massBins):
-  rooGaussMean_(0),
+GaussianLineShape::GaussianLineShape(const edm::ParameterSet& GaussianPSet,
+                                     RooRealVar *massBins):
+
+  rooGaussMean1S_(0),
   rooGaussSigma_(0),
-  rooGaussDummyFrac_(0),
-  rooGaussPdf_(0),
+
+  rooGaussDummyFrac2S_(0),
+  rooGaussDummyFrac3S_(0),
+  rooGaussPdf1S_(0),
+  rooGaussPdf2S_(0),
+  rooGaussPdf3S_(0),
+
   GaussPDF_(0){
-  
+
   Configure(GaussianPSet, massBins);
 }
 
@@ -29,64 +44,114 @@
 }
 
 void GaussianLineShape::CleanUp() {
-  if (rooGaussMean_) {
-    delete rooGaussMean_;
-    rooGaussMean_ = 0;
+  if (rooGaussMean1S_) {
+    delete rooGaussMean1S_;
+    rooGaussMean1S_ = 0;
   }
   if (rooGaussSigma_) {
     delete rooGaussSigma_;
     rooGaussSigma_ = 0;
   }
-  if (rooGaussPdf_) {
-    delete rooGaussPdf_;
-    rooGaussPdf_ = 0;
-  }
-  if (rooGaussDummyFrac_) {
-    delete rooGaussDummyFrac_;
-    rooGaussDummyFrac_ = 0;
+  if (rooGaussPdf1S_) {
+    delete rooGaussPdf1S_;
+    rooGaussPdf1S_ = 0;
+  }
+  if (rooGaussPdf2S_) {
+    delete rooGaussPdf2S_;
+    rooGaussPdf2S_ = 0;
+  }
+  if (rooGaussPdf3S_) {
+    delete rooGaussPdf3S_;
+    rooGaussPdf3S_ = 0;
+  }
+
+  if (rooGaussDummyFrac2S_) {
+    delete rooGaussDummyFrac2S_;
+    rooGaussDummyFrac2S_ = 0;
+  }
+  if (rooGaussDummyFrac3S_) {
+    delete rooGaussDummyFrac3S_;
+    rooGaussDummyFrac3S_ = 0;
   }
+
   if (GaussPDF_) {
     delete GaussPDF_;
     GaussPDF_ = 0;
   }
 }
 
-void GaussianLineShape::Configure (const edm::ParameterSet& GaussianPSet, 
-				   RooRealVar *massBins) {
-  
-  if (GaussPDF_) 
+void GaussianLineShape::Configure (const edm::ParameterSet& GaussianPSet,
+                                   RooRealVar *massBins) {
+
+  if (GaussPDF_)
     CleanUp();
-  
-  std::vector<double> gaussMean_ = 
-    GaussianPSet.getUntrackedParameter< std::vector<double> >("GaussMean");
-  
-  std::vector<double> gaussSigma_ = 
+
+  std::vector<double> gaussMean1S_ =
+    GaussianPSet.getUntrackedParameter< std::vector<double> >("GaussMean1S");
+
+  std::vector<double> gaussSigma_ =
     GaussianPSet.getUntrackedParameter< std::vector<double> >("GaussSigma");
-  
+  std::vector<double> frac2S_ =
+    GaussianPSet.getUntrackedParameter< std::vector<double> >("frac2S");
+  std::vector<double> frac3S_ =
+    GaussianPSet.getUntrackedParameter< std::vector<double> >("frac3S");
+
+  const double M1S = 9.46;
+  const double M2S = 10.02;
+  const double M3S = 10.35;
+  const double Shift21 = M2S-M1S;
+  const double Shift31 = M3S-M1S;
+  const double Sfrac2 = 0.6;
+  const double Sfrac3 = 0.2;
+
+  RooRealVar *mscale  = new RooRealVar("mscale","mass scale factor",1.,0.7,1.3);
+  mscale->setConstant(kTRUE);
+  RooRealVar *shift21 = new RooRealVar("shift2","mass diff #Upsilon(1,2S)",Shift21);
+  RooRealVar *shift31 = new RooRealVar("shift3","mass diff #Upsilon(1,3S)",Shift31);
+  shift21->setConstant(kTRUE);
+  shift31->setConstant(kTRUE);
   // Signal PDF variables
-  rooGaussMean_  = new RooRealVar("gaussMean","gaussMean",gaussMean_[0]);
-  rooGaussSigma_ = new RooRealVar("gaussSigma","gaussSigma",gaussSigma_[0]);
-  
+  rooGaussMean1S_  = new RooRealVar("gaussMean1S","gaussMean1S",gaussMean1S_[0]);
+
+  RooFormulaVar *rooGaussMean2S_ = new RooFormulaVar("mean2S","@0+@1*@2",
+                                            RooArgSet(*rooGaussMean1S_,*mscale,*shift21));
+  RooFormulaVar *rooGaussMean3S_ = new RooFormulaVar("mean3S","@0+@1*@2",
+                                            RooArgSet(*rooGaussMean1S_,*mscale,*shift31));
+  rooGaussSigma_ = new RooRealVar("gaussSigma1S","gaussSigma1S",gaussSigma_[0]);
+  rooGaussDummyFrac2S_ = new RooRealVar("dummyFrac2S","dummyFrac2S",frac2S_[0]);
+  rooGaussDummyFrac3S_ = new RooRealVar("dummyFrac3S","dummyFrac3S",frac3S_[0]);
+
   // If the user has set a range, make the variable float
-  if( gaussMean_.size() == 3 ){
-    rooGaussMean_->setRange(gaussMean_[1],gaussMean_[2]);
-    rooGaussMean_->setConstant(false);
+  if( gaussMean1S_.size() == 3 ){
+    rooGaussMean1S_->setRange(gaussMean1S_[1],gaussMean1S_[2]);
+    rooGaussMean1S_->setConstant(false);
   }
   if( gaussSigma_.size() == 3 ){
     rooGaussSigma_->setRange(gaussSigma_[1],gaussSigma_[2]);
     rooGaussSigma_->setConstant(false);
   }
-  rooGaussDummyFrac_ = new RooRealVar("dummyFrac","dummyFrac",1.0);
-  
-  rooGaussPdf_ = new RooGaussian("gaussPdf","gaussPdf",*massBins,*rooGaussMean_,
-				 *rooGaussSigma_);
-  
+  if( frac2S_.size() == 3 ){
+    rooGaussDummyFrac2S_->setRange(frac2S_[1],frac2S_[2]);
+    rooGaussDummyFrac2S_->setConstant(false);
+  }
+  if( gaussSigma_.size() == 3 ){
+    rooGaussDummyFrac3S_->setRange(frac3S_[1],frac3S_[2]);
+    rooGaussDummyFrac3S_->setConstant(false);
+  }
+
+  rooGaussPdf1S_ = new RooGaussian("gaussPdf1S","gaussPdf1S",*massBins,*rooGaussMean1S_,
+                                 *rooGaussSigma_);
+  rooGaussPdf2S_ = new RooGaussian("gaussPdf2S","gaussPdf2S",*massBins,*rooGaussMean2S_,
+                                 *rooGaussSigma_);
+  rooGaussPdf3S_ = new RooGaussian("gaussPdf3S","gaussPdf3S",*massBins,*rooGaussMean3S_,
+                                 *rooGaussSigma_);
   GaussPDF_ = new RooAddPdf("signalShapePdf", "signalShapePdf",
-			    *rooGaussPdf_,*rooGaussPdf_,*rooGaussDummyFrac_);
+                            RooArgList(*rooGaussPdf1S_,*rooGaussPdf2S_,*rooGaussPdf3S_),RooArgList(*rooGaussDummyFrac2S_,*rooGaussDummyFrac3S_));
 }
 
 void GaussianLineShape::CreatePDF(RooAddPdf *&GaussPDF){
-  
+
   if (!GaussPDF_) return;
   GaussPDF = GaussPDF_;
 }
+
Index: interface/GaussianLineShape.hh
===================================================================
RCS file: /cvs_server/repositories/CMSSW/CMSSW/PhysicsTools/TagAndProbe/interface/GaussianLineShape.hh,v
retrieving revision 1.1
diff -u -r1.1 GaussianLineShape.hh
--- interface/GaussianLineShape.hh	19 May 2009 11:43:35 -0000	1.1
+++ interface/GaussianLineShape.hh	5 Jan 2010 22:05:42 -0000
@@ -21,14 +21,19 @@
 private:
 
   void CleanUp();
-
-  RooRealVar  *rooGaussMean_;
+  RooRealVar  *rooGaussMean1S_;
   RooRealVar  *rooGaussSigma_;
-  RooRealVar  *rooGaussDummyFrac_;
-  
-  RooGaussian *rooGaussPdf_;
+  RooRealVar  *rooGaussDummyFrac2S_;
+  RooRealVar  *rooGaussDummyFrac3S_;
+  RooRealVar  *Shift21;
+  RooRealVar  *Shift31;
+
+  RooGaussian *rooGaussPdf1S_;
+  RooGaussian *rooGaussPdf2S_;
+  RooGaussian *rooGaussPdf3S_;
 
   RooAddPdf *GaussPDF_;
 };
 
 #endif
+
